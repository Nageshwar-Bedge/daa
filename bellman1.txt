#include <stdio.h>
#include <stdlib.h>
#include <limits.h>

// Structure to represent an edge in the graph
struct Edge {
    int src, dest, weight;
};

// Function to perform Bellman-Ford algorithm
void BellmanFord(struct Edge* edges, int V, int E, int src) {
    int* distance = (int*)malloc(V * sizeof(int));
    
    // Initialize distances
    for (int i = 0; i < V; i++) {
        distance[i] = INT_MAX;
    }
    
    distance[src] = 0;  // Distance from source to itself is 0
    
    // Relax all edges V-1 times
    for (int i = 0; i < V - 1; i++) {
        for (int j = 0; j < E; j++) {
            int u = edges[j].src;
            int v = edges[j].dest;
            int weight = edges[j].weight;
            
            if (distance[u] != INT_MAX && distance[u] + weight < distance[v]) {
                distance[v] = distance[u] + weight;
            }
        }
    }
    
    // Check for negative cycles
    for (int i = 0; i < E; i++) {
        int u = edges[i].src;
        int v = edges[i].dest;
        int weight = edges[i].weight;
        if (distance[u] != INT_MAX && distance[u] + weight < distance[v]) {
            printf("Graph contains a negative cycle.\n");
            free(distance);
            return;
        }
    }
    
    // Print the distances from the source vertex
    printf("Vertex Distance from Source:\n");
    for (int i = 0; i < V; i++) {
        printf("%d\t\t%d\n", i, distance[i]);
    }
    
    free(distance);
}

int main() {
    int V, E, src;

    printf("Please enter the number of vertices: ");
    scanf("%d", &V);

    printf("Please enter the number of edges: ");
    scanf("%d", &E);

    struct Edge* edges = (struct Edge*)malloc(E * sizeof(struct Edge));

    printf("Please enter source vertex, destination vertex, and weight for each edge:\n");
    for (int i = 0; i < E; i++) {
        scanf("%d %d %d", &edges[i].src, &edges[i].dest, &edges[i].weight);
    }

    printf("Please enter the source vertex: ");
    scanf("%d", &src);

    BellmanFord(edges, V, E, src);

    free(edges);

    return 0;
}
